/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package demo_1.test_1.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import demo_1.test_1.utils.DateTimeDeserializer;
import demo_1.test_1.utils.DateTimeSerializer;
import java.time.OffsetDateTime;

/**
 * ValueResponse - Shared Values can be used to manage variables and configuration that might vary between environments. They are also the way that secrets can be stored securely.
 * 
 * Shared Values are by default shared across all environments in an application. However, they can be overridden on an Environment by Environment basis.
 * 
 * For example: There might be 2 API keys that are used in an application. One development key used in the development and staging environments and another used for production. The development API key would be set at the Application level. The value would then be overridden at the Environment level for the production Environment.
 */
public class ValueResponse {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public ValueResponse withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * A Human friendly description of what the Shared Value is.
     */
    @JsonProperty("description")
    public String description;

    public ValueResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Specified that the Shared Value contains a secret.
     */
    @JsonProperty("is_secret")
    public Boolean isSecret;

    public ValueResponse withIsSecret(Boolean isSecret) {
        this.isSecret = isSecret;
        return this;
    }
    
    /**
     * The unique key by which the Shared Value can be referenced. pattern: ^[a-zA-Z0-9._-]+$.
     */
    @JsonProperty("key")
    public String key;

    public ValueResponse withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Location of the secret value in the secret store.
     */
    @JsonProperty("secret_key")
    public String secretKey;

    public ValueResponse withSecretKey(String secretKey) {
        this.secretKey = secretKey;
        return this;
    }
    
    /**
     * Version of the current secret value as returned by the secret store.
     */
    @JsonProperty("secret_version")
    public String secretVersion;

    public ValueResponse withSecretVersion(String secretVersion) {
        this.secretVersion = secretVersion;
        return this;
    }
    
    /**
     * Source of the value, "app" for app level, "env" for app env level.
     */
    @JsonProperty("source")
    public ValueSource source;

    public ValueResponse withSource(ValueSource source) {
        this.source = source;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public ValueResponse withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The value that will be stored. (Will be always empty for secrets.)
     */
    @JsonProperty("value")
    public String value;

    public ValueResponse withValue(String value) {
        this.value = value;
        return this;
    }
    
    public ValueResponse(@JsonProperty("created_at") OffsetDateTime createdAt, @JsonProperty("description") String description, @JsonProperty("is_secret") Boolean isSecret, @JsonProperty("key") String key, @JsonProperty("secret_key") String secretKey, @JsonProperty("secret_version") String secretVersion, @JsonProperty("source") ValueSource source, @JsonProperty("updated_at") OffsetDateTime updatedAt, @JsonProperty("value") String value) {
        this.createdAt = createdAt;
        this.description = description;
        this.isSecret = isSecret;
        this.key = key;
        this.secretKey = secretKey;
        this.secretVersion = secretVersion;
        this.source = source;
        this.updatedAt = updatedAt;
        this.value = value;
  }
}
