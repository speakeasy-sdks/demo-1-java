/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package demo_1.test_1.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AutomationRuleResponse - An Automation Rule defining how and when artefacts in an environment should be updated.
 */
public class AutomationRuleResponse {
    /**
     * Whether the rule will be processed or not.
     */
    @JsonProperty("active")
    public Boolean active;
    public AutomationRuleResponse withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * A list of artefact names to be processed by the rule. If the array is empty, it implies include all. If `exclude_artefacts_filter` is true, this list describes the artefacts to exclude.
     */
    @JsonProperty("artefacts_filter")
    public String[] artefactsFilter;
    public AutomationRuleResponse withArtefactsFilter(String[] artefactsFilter) {
        this.artefactsFilter = artefactsFilter;
        return this;
    }
    
    /**
     * The timestamp in UTC of when the Automation Rule was created.
     */
    @JsonProperty("created_at")
    public String createdAt;
    public AutomationRuleResponse withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Whether the artefacts specified in `artefacts_filter` should be excluded (true) or included (false) in the automation rule.
     */
    @JsonProperty("exclude_artefacts_filter")
    public Boolean excludeArtefactsFilter;
    public AutomationRuleResponse withExcludeArtefactsFilter(Boolean excludeArtefactsFilter) {
        this.excludeArtefactsFilter = excludeArtefactsFilter;
        return this;
    }
    
    /**
     * DEPRECATED: Whether the images specified in `images_filter` should be excluded (true) or included (false) in the automation rule.
     */
    @JsonProperty("exclude_images_filter")
    public Boolean excludeImagesFilter;
    public AutomationRuleResponse withExcludeImagesFilter(Boolean excludeImagesFilter) {
        this.excludeImagesFilter = excludeImagesFilter;
        return this;
    }
    
    /**
     * The unique ID for this rule.
     */
    @JsonProperty("id")
    public String id;
    public AutomationRuleResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * DEPRECATED: A list of image IDs to be processed by the rule. If the array is empty, it implies include all. If `exclude_images_filter` is true, this list describes images to exclude.
     */
    @JsonProperty("images_filter")
    public String[] imagesFilter;
    public AutomationRuleResponse withImagesFilter(String[] imagesFilter) {
        this.imagesFilter = imagesFilter;
        return this;
    }
    
    /**
     * DEPRECATED: A regular expression applied to the branch or tag name depending on the value of `update_to`. Defaults to match all if omitted or empty.
     */
    @JsonProperty("match")
    public String match;
    public AutomationRuleResponse withMatch(String match) {
        this.match = match;
        return this;
    }
    
    /**
     * A regular expression applied to the ref of a new artefact version. Defaults to match all if omitted or empty.
     */
    @JsonProperty("match_ref")
    public String matchRef;
    public AutomationRuleResponse withMatchRef(String matchRef) {
        this.matchRef = matchRef;
        return this;
    }
    
    /**
     * Specifies the type of event. Currently, only updates to either branches or tags are supported. Must be `"update"`.
     */
    @JsonProperty("type")
    public String type;
    public AutomationRuleResponse withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * DEPRECATED: Specifies whether the update occurs on commit to branch or creation of tag. Must be one of `"branch"` or `"tag"`.
     */
    @JsonProperty("update_to")
    public String updateTo;
    public AutomationRuleResponse withUpdateTo(String updateTo) {
        this.updateTo = updateTo;
        return this;
    }
    
    /**
     * The timestamp in UTC of when the Automation Rule was updated.
     */
    @JsonProperty("updated_at")
    public String updatedAt;
    public AutomationRuleResponse withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public AutomationRuleResponse(@JsonProperty("active") Boolean active, @JsonProperty("artefacts_filter") String[] artefactsFilter, @JsonProperty("created_at") String createdAt, @JsonProperty("exclude_artefacts_filter") Boolean excludeArtefactsFilter, @JsonProperty("exclude_images_filter") Boolean excludeImagesFilter, @JsonProperty("id") String id, @JsonProperty("images_filter") String[] imagesFilter, @JsonProperty("match") String match, @JsonProperty("match_ref") String matchRef, @JsonProperty("type") String type, @JsonProperty("update_to") String updateTo, @JsonProperty("updated_at") String updatedAt) {
        this.active = active;
        this.artefactsFilter = artefactsFilter;
        this.createdAt = createdAt;
        this.excludeArtefactsFilter = excludeArtefactsFilter;
        this.excludeImagesFilter = excludeImagesFilter;
        this.id = id;
        this.imagesFilter = imagesFilter;
        this.match = match;
        this.matchRef = matchRef;
        this.type = type;
        this.updateTo = updateTo;
        this.updatedAt = updatedAt;
  }
}
