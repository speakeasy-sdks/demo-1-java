/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package demo_1.test_1.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import demo_1.test_1.utils.SpeakeasyMetadata;

public class PatchOrgsOrgIdAppsAppIdDeltasDeltaIdRequest {
    /**
     * An array of Deltas.
     * 
     * The Deltas in the request are combined, meaning the current Delta is updated in turn by each Delta in the request. Once all Deltas have been combined, the resulting Delta is simplified.
     * 
     * * All Modules in the `modules.add` property are replaced with the new Delta's values. If the value of a Module is `null`, and the ID is in the `modules.remove` list, it is removed from the `modules.remove` list.
     * 
     * * All IDs listed in `modules.remove` are combined. Any ID in `modules.remove` and also in `modules.add` are removed from `modules.add`
     * 
     * * The lists of JSON Patches in `modules.update` are concatenated or created in `modules.updates`.
     * 
     * Simplification involves:
     * 
     * * Applying any entries in `modules.updates` that have matching IDs in `modules.add` to the `modules.add` entry and removing the `modules.update` entry.
     * 
     * * Reducing the number of JSON Patches in each `modules.update` entry to the smallest set that has the same effect.
     * 
     * **Extension to JSON Patch**
     * 
     * If a JSON Patch entry needs to be removed, without side effects, the `value` of the `remove` action can be set to `{"scope": "delta"}. This will result in the remove action being used during simplification but be discarded before the Delta is finalized.
     * 
     * If the user making the request is not the user who created the Delta and they are not already on the contributors list, they will be added to the contributors list.
     * 
     * _NOTE: If the `id` or `metadata` properties are specified, they will be ignored._
     */
    @SpeakeasyMetadata("request:mediaType=application/json")
    public demo_1.test_1.models.shared.DeltaRequest[] requestBody;
    public PatchOrgsOrgIdAppsAppIdDeltasDeltaIdRequest withRequestBody(demo_1.test_1.models.shared.DeltaRequest[] requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    /**
     * The Application ID.
     * 
     * 
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=appId")
    public String appId;
    public PatchOrgsOrgIdAppsAppIdDeltasDeltaIdRequest withAppId(String appId) {
        this.appId = appId;
        return this;
    }
    
    /**
     * ID of the Delta to update.
     * 
     * 
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=deltaId")
    public String deltaId;
    public PatchOrgsOrgIdAppsAppIdDeltasDeltaIdRequest withDeltaId(String deltaId) {
        this.deltaId = deltaId;
        return this;
    }
    
    /**
     * The Organization ID.
     * 
     * 
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=orgId")
    public String orgId;
    public PatchOrgsOrgIdAppsAppIdDeltasDeltaIdRequest withOrgId(String orgId) {
        this.orgId = orgId;
        return this;
    }
    
    public PatchOrgsOrgIdAppsAppIdDeltasDeltaIdRequest(@JsonProperty("RequestBody") demo_1.test_1.models.shared.DeltaRequest[] requestBody, @JsonProperty("appId") String appId, @JsonProperty("deltaId") String deltaId, @JsonProperty("orgId") String orgId) {
        this.requestBody = requestBody;
        this.appId = appId;
        this.deltaId = deltaId;
        this.orgId = orgId;
  }
}
